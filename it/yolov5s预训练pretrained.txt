odict_keys(['model.0.conv.conv.weight', 'model.0.conv.bn.weight', 'model.0.conv.bn.bias', 'model.0.conv.bn.running_mean', 'model.0.conv.bn.running_var', 'model.0.conv.bn.num_batches_tracked', 
'model.1.conv.weight', 'model.1.bn.weight', 'model.1.bn.bias', 'model.1.bn.running_mean', 'model.1.bn.running_var', 'model.1.bn.num_batches_tracked', 'model.2.cv1.conv.weight', 'model.2.cv1.bn.weight', 'model.2.cv1.bn.bias', 'model.2.cv1.bn.running_mean', 
'model.2.cv1.bn.running_var', 'model.2.cv1.bn.num_batches_tracked', 'model.2.cv2.conv.weight', 'model.2.cv2.bn.weight', 'model.2.cv2.bn.bias', 'model.2.cv2.bn.running_mean', 'model.2.cv2.bn.running_var', 'model.2.cv2.bn.num_batches_tracked', 'model.2.cv3.conv.weight', 'model.2.cv3.bn.weight', 'model.2.cv3.bn.bias', 'model.2.cv3.bn.running_mean', 'model.2.cv3.bn.running_var', 'model.2.cv3.bn.num_batches_tracked', 'model.2.m.0.cv1.conv.weight', 'model.2.m.0.cv1.bn.weight', 'model.2.m.0.cv1.bn.bias', 'model.2.m.0.cv1.bn.running_mean', 'model.2.m.0.cv1.bn.running_var', 'model.2.m.0.cv1.bn.num_batches_tracked', 'model.2.m.0.cv2.conv.weight', 'model.2.m.0.cv2.bn.weight', 'model.2.m.0.cv2.bn.bias', 'model.2.m.0.cv2.bn.running_mean', 'model.2.m.0.cv2.bn.running_var', 'model.2.m.0.cv2.bn.num_batches_tracked', 
'model.3.conv.weight', 'model.3.bn.weight', 'model.3.bn.bias', 'model.3.bn.running_mean', 'model.3.bn.running_var', 'model.3.bn.num_batches_tracked',
 'model.4.cv1.conv.weight', 'model.4.cv1.bn.weight', 'model.4.cv1.bn.bias', 'model.4.cv1.bn.running_mean', 'model.4.cv1.bn.running_var', 'model.4.cv1.bn.num_batches_tracked', 'model.4.cv2.conv.weight', 'model.4.cv2.bn.weight', 'model.4.cv2.bn.bias', 'model.4.cv2.bn.running_mean', 'model.4.cv2.bn.running_var', 'model.4.cv2.bn.num_batches_tracked', 'model.4.cv3.conv.weight', 'model.4.cv3.bn.weight', 'model.4.cv3.bn.bias', 'model.4.cv3.bn.running_mean', 'model.4.cv3.bn.running_var', 'model.4.cv3.bn.num_batches_tracked', 'model.4.m.0.cv1.conv.weight', 'model.4.m.0.cv1.bn.weight', 'model.4.m.0.cv1.bn.bias', 'model.4.m.0.cv1.bn.running_mean', 'model.4.m.0.cv1.bn.running_var', 'model.4.m.0.cv1.bn.num_batches_tracked', 'model.4.m.0.cv2.conv.weight', 'model.4.m.0.cv2.bn.weight', 'model.4.m.0.cv2.bn.bias', 'model.4.m.0.cv2.bn.running_mean', 'model.4.m.0.cv2.bn.running_var', 'model.4.m.0.cv2.bn.num_batches_tracked', 'model.4.m.1.cv1.conv.weight', 'model.4.m.1.cv1.bn.weight', 'model.4.m.1.cv1.bn.bias', 'model.4.m.1.cv1.bn.running_mean', 'model.4.m.1.cv1.bn.running_var', 'model.4.m.1.cv1.bn.num_batches_tracked', 'model.4.m.1.cv2.conv.weight', 'model.4.m.1.cv2.bn.weight', 'model.4.m.1.cv2.bn.bias', 'model.4.m.1.cv2.bn.running_mean', 'model.4.m.1.cv2.bn.running_var', 'model.4.m.1.cv2.bn.num_batches_tracked', 'model.4.m.2.cv1.conv.weight', 'model.4.m.2.cv1.bn.weight', 'model.4.m.2.cv1.bn.bias', 'model.4.m.2.cv1.bn.running_mean', 'model.4.m.2.cv1.bn.running_var', 'model.4.m.2.cv1.bn.num_batches_tracked', 'model.4.m.2.cv2.conv.weight', 'model.4.m.2.cv2.bn.weight', 'model.4.m.2.cv2.bn.bias', 'model.4.m.2.cv2.bn.running_mean', 'model.4.m.2.cv2.bn.running_var', 'model.4.m.2.cv2.bn.num_batches_tracked', 
'model.5.conv.weight', 'model.5.bn.weight', 'model.5.bn.bias', 'model.5.bn.running_mean', 'model.5.bn.running_var', 'model.5.bn.num_batches_tracked',
 'model.6.cv1.conv.weight', 'model.6.cv1.bn.weight', 'model.6.cv1.bn.bias', 'model.6.cv1.bn.running_mean', 'model.6.cv1.bn.running_var', 'model.6.cv1.bn.num_batches_tracked', 'model.6.cv2.conv.weight', 'model.6.cv2.bn.weight', 'model.6.cv2.bn.bias', 'model.6.cv2.bn.running_mean', 'model.6.cv2.bn.running_var', 'model.6.cv2.bn.num_batches_tracked', 'model.6.cv3.conv.weight', 'model.6.cv3.bn.weight', 'model.6.cv3.bn.bias', 'model.6.cv3.bn.running_mean', 'model.6.cv3.bn.running_var', 'model.6.cv3.bn.num_batches_tracked', 'model.6.m.0.cv1.conv.weight', 'model.6.m.0.cv1.bn.weight', 'model.6.m.0.cv1.bn.bias', 'model.6.m.0.cv1.bn.running_mean', 'model.6.m.0.cv1.bn.running_var', 'model.6.m.0.cv1.bn.num_batches_tracked', 'model.6.m.0.cv2.conv.weight', 'model.6.m.0.cv2.bn.weight', 'model.6.m.0.cv2.bn.bias', 'model.6.m.0.cv2.bn.running_mean', 'model.6.m.0.cv2.bn.running_var', 'model.6.m.0.cv2.bn.num_batches_tracked', 'model.6.m.1.cv1.conv.weight', 'model.6.m.1.cv1.bn.weight', 'model.6.m.1.cv1.bn.bias', 'model.6.m.1.cv1.bn.running_mean', 'model.6.m.1.cv1.bn.running_var', 'model.6.m.1.cv1.bn.num_batches_tracked', 'model.6.m.1.cv2.conv.weight', 'model.6.m.1.cv2.bn.weight', 'model.6.m.1.cv2.bn.bias', 'model.6.m.1.cv2.bn.running_mean', 'model.6.m.1.cv2.bn.running_var', 'model.6.m.1.cv2.bn.num_batches_tracked', 'model.6.m.2.cv1.conv.weight', 'model.6.m.2.cv1.bn.weight', 'model.6.m.2.cv1.bn.bias', 'model.6.m.2.cv1.bn.running_mean', 'model.6.m.2.cv1.bn.running_var', 'model.6.m.2.cv1.bn.num_batches_tracked', 'model.6.m.2.cv2.conv.weight', 'model.6.m.2.cv2.bn.weight', 'model.6.m.2.cv2.bn.bias', 'model.6.m.2.cv2.bn.running_mean', 'model.6.m.2.cv2.bn.running_var', 'model.6.m.2.cv2.bn.num_batches_tracked', 
'model.7.conv.weight', 'model.7.bn.weight', 'model.7.bn.bias', 'model.7.bn.running_mean', 'model.7.bn.running_var', 'model.7.bn.num_batches_tracked', 
'model.8.cv1.conv.weight', 'model.8.cv1.bn.weight', 'model.8.cv1.bn.bias', 'model.8.cv1.bn.running_mean', 'model.8.cv1.bn.running_var', 'model.8.cv1.bn.num_batches_tracked', 'model.8.cv2.conv.weight', 'model.8.cv2.bn.weight', 'model.8.cv2.bn.bias', 'model.8.cv2.bn.running_mean', 'model.8.cv2.bn.running_var', 'model.8.cv2.bn.num_batches_tracked', 
'model.9.cv1.conv.weight', 'model.9.cv1.bn.weight', 'model.9.cv1.bn.bias', 'model.9.cv1.bn.running_mean', 'model.9.cv1.bn.running_var', 'model.9.cv1.bn.num_batches_tracked', 'model.9.cv2.conv.weight', 'model.9.cv2.bn.weight', 'model.9.cv2.bn.bias', 'model.9.cv2.bn.running_mean', 'model.9.cv2.bn.running_var', 'model.9.cv2.bn.num_batches_tracked', 'model.9.cv3.conv.weight', 'model.9.cv3.bn.weight', 'model.9.cv3.bn.bias', 'model.9.cv3.bn.running_mean', 'model.9.cv3.bn.running_var', 'model.9.cv3.bn.num_batches_tracked', 'model.9.m.0.cv1.conv.weight', 'model.9.m.0.cv1.bn.weight', 'model.9.m.0.cv1.bn.bias', 'model.9.m.0.cv1.bn.running_mean', 'model.9.m.0.cv1.bn.running_var', 'model.9.m.0.cv1.bn.num_batches_tracked', 'model.9.m.0.cv2.conv.weight', 'model.9.m.0.cv2.bn.weight', 'model.9.m.0.cv2.bn.bias', 'model.9.m.0.cv2.bn.running_mean', 'model.9.m.0.cv2.bn.running_var', 'model.9.m.0.cv2.bn.num_batches_tracked', 
'model.10.conv.weight', 'model.10.bn.weight', 'model.10.bn.bias', 'model.10.bn.running_mean', 'model.10.bn.running_var', 'model.10.bn.num_batches_tracked', 
'model.13.cv1.conv.weight', 'model.13.cv1.bn.weight', 'model.13.cv1.bn.bias', 'model.13.cv1.bn.running_mean', 'model.13.cv1.bn.running_var', 'model.13.cv1.bn.num_batches_tracked', 'model.13.cv2.conv.weight', 'model.13.cv2.bn.weight', 'model.13.cv2.bn.bias', 'model.13.cv2.bn.running_mean', 'model.13.cv2.bn.running_var', 'model.13.cv2.bn.num_batches_tracked', 'model.13.cv3.conv.weight', 'model.13.cv3.bn.weight', 'model.13.cv3.bn.bias', 'model.13.cv3.bn.running_mean', 'model.13.cv3.bn.running_var', 'model.13.cv3.bn.num_batches_tracked', 'model.13.m.0.cv1.conv.weight', 'model.13.m.0.cv1.bn.weight', 'model.13.m.0.cv1.bn.bias', 'model.13.m.0.cv1.bn.running_mean', 'model.13.m.0.cv1.bn.running_var', 'model.13.m.0.cv1.bn.num_batches_tracked', 'model.13.m.0.cv2.conv.weight', 'model.13.m.0.cv2.bn.weight', 'model.13.m.0.cv2.bn.bias', 'model.13.m.0.cv2.bn.running_mean', 'model.13.m.0.cv2.bn.running_var', 'model.13.m.0.cv2.bn.num_batches_tracked', 
'model.14.conv.weight', 'model.14.bn.weight', 'model.14.bn.bias', 'model.14.bn.running_mean', 'model.14.bn.running_var', 'model.14.bn.num_batches_tracked', 
'model.17.cv1.conv.weight', 'model.17.cv1.bn.weight', 'model.17.cv1.bn.bias', 'model.17.cv1.bn.running_mean', 'model.17.cv1.bn.running_var', 'model.17.cv1.bn.num_batches_tracked', 'model.17.cv2.conv.weight', 'model.17.cv2.bn.weight', 'model.17.cv2.bn.bias', 'model.17.cv2.bn.running_mean', 'model.17.cv2.bn.running_var', 'model.17.cv2.bn.num_batches_tracked', 'model.17.cv3.conv.weight', 'model.17.cv3.bn.weight', 'model.17.cv3.bn.bias', 'model.17.cv3.bn.running_mean', 'model.17.cv3.bn.running_var', 'model.17.cv3.bn.num_batches_tracked', 'model.17.m.0.cv1.conv.weight', 'model.17.m.0.cv1.bn.weight', 'model.17.m.0.cv1.bn.bias', 'model.17.m.0.cv1.bn.running_mean', 'model.17.m.0.cv1.bn.running_var', 'model.17.m.0.cv1.bn.num_batches_tracked', 'model.17.m.0.cv2.conv.weight', 'model.17.m.0.cv2.bn.weight', 'model.17.m.0.cv2.bn.bias', 'model.17.m.0.cv2.bn.running_mean', 'model.17.m.0.cv2.bn.running_var', 'model.17.m.0.cv2.bn.num_batches_tracked', 
'model.18.conv.weight', 'model.18.bn.weight', 'model.18.bn.bias', 'model.18.bn.running_mean', 'model.18.bn.running_var', 'model.18.bn.num_batches_tracked', 
'model.20.cv1.conv.weight', 'model.20.cv1.bn.weight', 'model.20.cv1.bn.bias', 'model.20.cv1.bn.running_mean', 'model.20.cv1.bn.running_var', 'model.20.cv1.bn.num_batches_tracked', 'model.20.cv2.conv.weight', 'model.20.cv2.bn.weight', 'model.20.cv2.bn.bias', 'model.20.cv2.bn.running_mean', 'model.20.cv2.bn.running_var', 'model.20.cv2.bn.num_batches_tracked', 'model.20.cv3.conv.weight', 'model.20.cv3.bn.weight', 'model.20.cv3.bn.bias', 'model.20.cv3.bn.running_mean', 'model.20.cv3.bn.running_var', 'model.20.cv3.bn.num_batches_tracked', 'model.20.m.0.cv1.conv.weight', 'model.20.m.0.cv1.bn.weight', 'model.20.m.0.cv1.bn.bias', 'model.20.m.0.cv1.bn.running_mean', 'model.20.m.0.cv1.bn.running_var', 'model.20.m.0.cv1.bn.num_batches_tracked', 'model.20.m.0.cv2.conv.weight', 'model.20.m.0.cv2.bn.weight', 'model.20.m.0.cv2.bn.bias', 'model.20.m.0.cv2.bn.running_mean', 'model.20.m.0.cv2.bn.running_var', 'model.20.m.0.cv2.bn.num_batches_tracked', 
'model.21.conv.weight', 'model.21.bn.weight', 'model.21.bn.bias', 'model.21.bn.running_mean', 'model.21.bn.running_var', 'model.21.bn.num_batches_tracked',
 'model.23.cv1.conv.weight', 'model.23.cv1.bn.weight', 'model.23.cv1.bn.bias', 'model.23.cv1.bn.running_mean', 'model.23.cv1.bn.running_var', 'model.23.cv1.bn.num_batches_tracked', 'model.23.cv2.conv.weight', 'model.23.cv2.bn.weight', 'model.23.cv2.bn.bias', 'model.23.cv2.bn.running_mean', 'model.23.cv2.bn.running_var', 'model.23.cv2.bn.num_batches_tracked', 'model.23.cv3.conv.weight', 'model.23.cv3.bn.weight', 'model.23.cv3.bn.bias', 'model.23.cv3.bn.running_mean', 'model.23.cv3.bn.running_var', 'model.23.cv3.bn.num_batches_tracked', 'model.23.m.0.cv1.conv.weight', 'model.23.m.0.cv1.bn.weight', 'model.23.m.0.cv1.bn.bias', 'model.23.m.0.cv1.bn.running_mean', 'model.23.m.0.cv1.bn.running_var', 'model.23.m.0.cv1.bn.num_batches_tracked', 'model.23.m.0.cv2.conv.weight', 'model.23.m.0.cv2.bn.weight', 'model.23.m.0.cv2.bn.bias', 'model.23.m.0.cv2.bn.running_mean', 'model.23.m.0.cv2.bn.running_var', 'model.23.m.0.cv2.bn.num_batches_tracked',
 'model.24.anchors', 'model.24.anchor_grid', 'model.24.m.0.weight', 'model.24.m.0.bias', 'model.24.m.1.weight', 'model.24.m.1.bias', 'model.24.m.2.weight', 'model.24.m.2.bias'])





model.0.conv_t.conv.weight torch.Size([32, 12, 3, 3])
model.0.conv_t.bn.weight torch.Size([32])
model.0.conv_t.bn.bias torch.Size([32])
model.0.conv_t.bn.running_mean torch.Size([32])
model.0.conv_t.bn.running_var torch.Size([32])
model.0.conv_t.bn.num_batches_tracked torch.Size([])
model.1.conv_t.weight torch.Size([64, 32, 3, 3])
model.1.bn_t.weight torch.Size([64])
model.1.bn_t.bias torch.Size([64])
model.1.bn_t.running_mean torch.Size([64])
model.1.bn_t.running_var torch.Size([64])
model.1.bn_t.num_batches_tracked torch.Size([])
model.2.cv1_t.conv.weight torch.Size([32, 64, 1, 1])
model.2.cv1_t.bn.weight torch.Size([32])
model.2.cv1_t.bn.bias torch.Size([32])
model.2.cv1_t.bn.running_mean torch.Size([32])
model.2.cv1_t.bn.running_var torch.Size([32])
model.2.cv1_t.bn.num_batches_tracked torch.Size([])
model.2.cv2_t.conv.weight torch.Size([32, 64, 1, 1])
model.2.cv2_t.bn.weight torch.Size([32])
model.2.cv2_t.bn.bias torch.Size([32])
model.2.cv2_t.bn.running_mean torch.Size([32])
model.2.cv2_t.bn.running_var torch.Size([32])
model.2.cv2_t.bn.num_batches_tracked torch.Size([])
model.2.cv3_t.conv.weight torch.Size([64, 64, 1, 1])
model.2.cv3_t.bn.weight torch.Size([64])
model.2.cv3_t.bn.bias torch.Size([64])
model.2.cv3_t.bn.running_mean torch.Size([64])
model.2.cv3_t.bn.running_var torch.Size([64])
model.2.cv3_t.bn.num_batches_tracked torch.Size([])
model.2.m_t.0.cv1.conv.weight torch.Size([32, 32, 1, 1])
model.2.m_t.0.cv1.bn.weight torch.Size([32])
model.2.m_t.0.cv1.bn.bias torch.Size([32])
model.2.m_t.0.cv1.bn.running_mean torch.Size([32])
model.2.m_t.0.cv1.bn.running_var torch.Size([32])
model.2.m_t.0.cv1.bn.num_batches_tracked torch.Size([])
model.2.m_t.0.cv2.conv.weight torch.Size([32, 32, 3, 3])
model.2.m_t.0.cv2.bn.weight torch.Size([32])
model.2.m_t.0.cv2.bn.bias torch.Size([32])
model.2.m_t.0.cv2.bn.running_mean torch.Size([32])
model.2.m_t.0.cv2.bn.running_var torch.Size([32])
model.2.m_t.0.cv2.bn.num_batches_tracked torch.Size([])
model.3.conv_t.weight torch.Size([128, 64, 3, 3])
model.3.bn_t.weight torch.Size([128])
model.3.bn_t.bias torch.Size([128])
model.3.bn_t.running_mean torch.Size([128])
model.3.bn_t.running_var torch.Size([128])
model.3.bn_t.num_batches_tracked torch.Size([])
model.4.cv1_t.conv.weight torch.Size([64, 128, 1, 1])
model.4.cv1_t.bn.weight torch.Size([64])
model.4.cv1_t.bn.bias torch.Size([64])
model.4.cv1_t.bn.running_mean torch.Size([64])
model.4.cv1_t.bn.running_var torch.Size([64])
model.4.cv1_t.bn.num_batches_tracked torch.Size([])
model.4.m_t.0.cv1.conv.weight torch.Size([64, 64, 1, 1])
model.4.m_t.0.cv1.bn.weight torch.Size([64])
model.4.m_t.0.cv1.bn.bias torch.Size([64])
model.4.m_t.0.cv1.bn.running_mean torch.Size([64])
model.4.m_t.0.cv1.bn.running_var torch.Size([64])
model.4.m_t.0.cv1.bn.num_batches_tracked torch.Size([])
model.4.m_t.0.cv2.conv.weight torch.Size([64, 64, 3, 3])
model.4.m_t.0.cv2.bn.weight torch.Size([64])
model.4.m_t.0.cv2.bn.bias torch.Size([64])
model.4.m_t.0.cv2.bn.running_mean torch.Size([64])
model.4.m_t.0.cv2.bn.running_var torch.Size([64])
model.4.m_t.0.cv2.bn.num_batches_tracked torch.Size([])
model.4.m_t.1.cv1.conv.weight torch.Size([64, 64, 1, 1])
model.4.m_t.1.cv1.bn.weight torch.Size([64])
model.4.m_t.1.cv1.bn.bias torch.Size([64])
model.4.m_t.1.cv1.bn.running_mean torch.Size([64])
model.4.m_t.1.cv1.bn.running_var torch.Size([64])
model.4.m_t.1.cv1.bn.num_batches_tracked torch.Size([])
model.4.m_t.1.cv2.conv.weight torch.Size([64, 64, 3, 3])
model.4.m_t.1.cv2.bn.weight torch.Size([64])
model.4.m_t.1.cv2.bn.bias torch.Size([64])
model.4.m_t.1.cv2.bn.running_mean torch.Size([64])
model.4.m_t.1.cv2.bn.running_var torch.Size([64])
model.4.m_t.1.cv2.bn.num_batches_tracked torch.Size([])
model.4.m_t.2.cv1.conv.weight torch.Size([64, 64, 1, 1])
model.4.m_t.2.cv1.bn.weight torch.Size([64])
model.4.m_t.2.cv1.bn.bias torch.Size([64])
model.4.m_t.2.cv1.bn.running_mean torch.Size([64])
model.4.m_t.2.cv1.bn.running_var torch.Size([64])
model.4.m_t.2.cv1.bn.num_batches_tracked torch.Size([])
model.4.m_t.2.cv2.conv.weight torch.Size([64, 64, 3, 3])
model.4.m_t.2.cv2.bn.weight torch.Size([64])
model.4.m_t.2.cv2.bn.bias torch.Size([64])
model.4.m_t.2.cv2.bn.running_mean torch.Size([64])
model.4.m_t.2.cv2.bn.running_var torch.Size([64])
model.4.m_t.2.cv2.bn.num_batches_tracked torch.Size([])


